import pandas as pd

def load_csv(file_path):
    # ƒê·ªçc file CSV
    df = pd.read_csv(file_path, encoding="utf-8")

    # Chu·∫©n h√≥a t√™n c·ªôt ƒë·ªÉ tr√°nh l·ªói KeyError
    df.columns = df.columns.str.strip()

    return df

# Test ƒë·ªçc file
data = load_csv("bao_tang_ha_noi_khong_dau.csv")
print("D·ªØ li·ªáu ƒë√£ ƒë·ªçc:", data[:5])  # In 5 d√≤ng ƒë·∫ßu

def search_info(question, data):
    for text in data:
        if any(word.lower() in text.lower() for word in question.split()):  
            return text  # Tr·∫£ v·ªÅ d√≤ng ƒë·∫ßu ti√™n kh·ªõp nh·∫•t
    return "Xin l·ªói, t√¥i kh√¥ng t√¨m th·∫•y th√¥ng tin ph√π h·ª£p trong d·ªØ li·ªáu."

# üìå T√¨m b·∫£o t√†ng c√≥ gi√° v√© r·∫ª nh·∫•t
def find_cheapest_museum(df):
    df["Gia Ve"] = df["Gia Ve"].replace("[^0-9]", "", regex=True).astype(float)
    min_price = df["Gia Ve"].min()
    cheapest_museums = df[df["Gia Ve"] == min_price]
    return cheapest_museums.to_dict(orient="records")

# üìå T√¨m ki·∫øm th√¥ng tin ph√π h·ª£p
def search_info(question, df):
    question_lower = question.lower()

    if "gi√° v√© r·∫ª nh·∫•t" in question_lower or "v√© r·∫ª nh·∫•t" in question_lower:
        cheapest_museums = find_cheapest_museum(df)
        if cheapest_museums:
            return "\n".join([f"{m['Ten Bao Tang']} - Gi√° v√©: {m['Gia Ve']} VND" for m in cheapest_museums])
        return "Kh√¥ng t√¨m th·∫•y b·∫£o t√†ng n√†o."

    for _, row in df.iterrows():
        if any(word.lower() in row["Ten Bao Tang"].lower() for word in question.split()):
            return f"{row['Ten Bao Tang']} - ƒê·ªãa ch·ªâ: {row['Dia Chi']} - Gi·ªù m·ªü c·ª≠a: {row['Gio Mo Cua']} - Gi√° v√©: {row['Gia Ve']}"

    return "Xin l·ªói, t√¥i kh√¥ng t√¨m th·∫•y th√¥ng tin ph√π h·ª£p trong d·ªØ li·ªáu."

import ollama

# Load d·ªØ li·ªáu CSV
df = load_csv("bao_tang_ha_noi_khong_dau.csv")

while True:
    user_input = input("B·∫°n: ")
    if user_input.lower() == "exit":
        break

    # T√¨m th√¥ng tin ph√π h·ª£p t·ª´ file CSV
    relevant_info = search_info(user_input, df)

    #∆∞u ti√™n tr·∫£ l·ªùi b·∫±ng ti·∫øng Vi·ªát
    messages = [
        {"role": "system", "content": "B·∫°n l√† m·ªôt tr·ª£ l√Ω th√¥ng minh chuy√™n tr·∫£ l·ªùi c√¢u h·ªèi v·ªÅ b·∫£o t√†ng ·ªü H√† N·ªôi. Lu√¥n tr·∫£ l·ªùi b·∫±ng ti·∫øng Vi·ªát m·ªôt c√°ch r√µ r√†ng, d·ªÖ hi·ªÉu v√† ƒë·∫ßy ƒë·ªß."},
        {"role": "user", "content": f"C√¢u h·ªèi: {user_input}\n\nTh√¥ng tin t·ª´ d·ªØ li·ªáu:\n{relevant_info}\n\nH√£y tr·∫£ l·ªùi b·∫±ng ti·∫øng Vi·ªát m·ªôt c√°ch t·ª± nhi√™n v√† d·ªÖ hi·ªÉu."}
    ]

    model_name = "gemma"
    response = ollama.chat(model="gemma", messages=messages)

    # Hi·ªÉn th·ªã ph·∫£n h·ªìi t·ª´ bot
    if "message" in response and "content" in response["message"]:
        print(f"Bot: {response['message']['content']}")
    else:
        print("Bot: Xin l·ªói, t√¥i kh√¥ng th·ªÉ t√¨m th·∫•y c√¢u tr·∫£ l·ªùi.")

